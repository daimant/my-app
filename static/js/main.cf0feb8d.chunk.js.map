{"version":3,"sources":["api/api.js","serviceWorker.js","redux/sidebar-reducer.js","redux/friends-reducer.js","redux/navigations-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/NavBar/NavBar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","HOC/withSuspense.js","App.js","AppContainer.js","AppSocialNetwork.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx","components/NavBar/NavBar.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/preloader.svg"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","initialStore","sidebarReducer","state","id","name","age","friendsReducer","link","text","navigationsReducer","initialState","initialized","appReducer","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sideBar","friendsData","navigationsData","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","props","className","classes","nav","item","active","to","activeClassName","activeLink","Header","header","src","alt","loginBlock","isAuth","onClick","HeaderContainer","this","React","Component","connect","withSuspense","fallback","Preloader","Login","lazy","UsersContainer","Friends","Music","News","Settings","DialogsContainer","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","dispatch","a","getAuthUserData","promise","Promise","all","AppSocialNetwork","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_AUTH_USER_DATA","setAuthUserData","payload","resultCode","message","messages","length","stopSubmit","_error","preloader","module","exports","postsData","img","likeCounts","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","filter","p","postId","dialogsData","messagesData","sendMessageCreator","newMessageBody","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followInfollowFlow","APIMethod","actionCreator","toggleFollowingProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","requestUsers","page","count","totalCount","bind","followed"],"mappings":"uHAAA,kHAEMA,EAAWC,SAAa,CAC5BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAE,UAAW,0CAEXC,EAAW,CACtBC,SAAU,WAAqC,IAApCC,EAAmC,uDAArB,EAAGC,EAAkB,uDAAP,GACrC,OAAOR,EACJS,IADI,qBACcF,EADd,kBACmCC,IACvCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BC,OAAQ,WAAiB,IAAhBC,EAAe,uDAAN,EAChB,OAAOd,EAASe,KAAT,iBAAwBD,IAAUJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAErEI,SAAU,WAAiB,IAAhBF,EAAe,uDAAN,EAClB,OAAOd,EAASiB,OAAT,iBAA0BH,IAAUJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEvEM,WAAY,SAAAJ,GACV,OAAOK,EAAWD,WAAWJ,KAGpBK,EAAa,CACxBD,WAAY,SAAAJ,GACV,OAAOd,EAASS,IAAI,WAAaK,IAEnCM,UAAW,SAAAN,GACT,OAAOd,EAASS,IAAI,kBAAoBK,IAE1CO,aAAc,SAAAC,GACZ,OAAOtB,EAASuB,IAAT,iBAA+B,CAAED,OAAQA,MAGvCE,EAAU,CACrBC,GAAI,WACF,OAAOzB,EAASS,IAAT,YAETiB,MAAO,SAACC,EAAOC,GAAkC,IAAxBC,EAAuB,wDAC9C,OAAO7B,EAASe,KAAT,aAA4B,CAAEY,QAAOC,WAAUC,gBAExDC,OAAQ,WACN,OAAO9B,EAASiB,OAAT,iB,8EC9BSc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oFClBFC,EAAe,GAMJC,EAJQ,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAyB,iCACvD,OAAOE,GCHLF,EAAe,CACjB,CAAEG,GAAI,EAAGC,KAAM,uCAAUC,IAAK,IAC9B,CAAEF,GAAI,EAAGC,KAAM,uCAAUC,IAAK,IAC9B,CAAEF,GAAI,EAAGC,KAAM,2BAAQC,IAAK,IAC5B,CAAEF,GAAI,EAAGC,KAAM,2BAAQC,IAAK,IAC5B,CAAEF,GAAI,EAAGC,KAAM,2BAAQC,IAAK,IAC5B,CAAEF,GAAI,EAAGC,KAAM,uCAAUC,IAAK,KAOjBC,EAJQ,WAAmC,IAAlCJ,EAAiC,uDAAzBF,EAAyB,iCACvD,OAAOE,GCVLF,EAAe,CACjB,CAAEO,KAAM,WAAYC,KAAM,8CAC1B,CAAED,KAAM,WAAYC,KAAM,wCAC1B,CAAED,KAAM,WAAYC,KAAM,0DAC1B,CAAED,KAAM,SAAUC,KAAM,wCACxB,CAAED,KAAM,QAASC,KAAM,8CACvB,CAAED,KAAM,YAAaC,KAAK,2DAMbC,EAJY,WAAmC,IAAlCP,EAAiC,uDAAzBF,EAAyB,iCAC3D,OAAOE,G,8DCNLQ,EAAe,CACjBC,aAAa,GAsBAC,EAnBI,WAAmC,IAAlCV,EAAiC,uDAAzBQ,EAAcG,EAAW,uCACnD,OAAQA,EAAOC,MACb,IAPwB,sBAQtB,OAAO,eACFZ,EADL,CAEES,aAAa,IAEjB,QACE,OAAOT,ICHTa,EAAWC,YAAgB,CAC7BC,YAAaC,IACbC,YAAaC,IACbC,QAASpB,EACTqB,YAAahB,EACbiB,gBAAiBd,EACjBe,UAAWC,IACXC,KAAMC,IACNC,KAAMC,IACNC,IAAKlB,IAEDmB,EAAmBnC,OAAOoC,sCAAwCC,IAMzDC,EALDC,YACZpB,EACAgB,EAAiBK,YAAgBC,O,gECgCpBC,EAtDA,SAAAC,GACb,OACE,yBAAKC,UAAWC,IAAQC,KACtB,yBAAKF,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAQM,YAAhD,+CAIF,yBAAKP,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAQM,YAAhD,yCAIF,yBAAKP,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAQM,YAA9C,6EAIF,yBAAKP,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBL,IAAQM,YAAhD,2DAIF,yBAAKP,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBL,IAAQM,YAA9C,yCAIF,yBAAKP,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBL,IAAQM,YAA7C,+CAIF,yBAAKP,UAAS,UAAKC,IAAQE,KAAb,YAAqBF,IAAQG,SACzC,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBL,IAAQM,YAAjD,6D,iBCdOC,EApBA,SAAAT,GACb,OACE,4BAAQC,UAAWC,IAAQQ,QACzB,yBACEC,IAAI,qGACJC,IAAI,KAEN,yBAAKX,UAAWC,IAAQW,YACrBb,EAAMc,OACL,6BACGd,EAAMjD,MADT,MACkB,4BAAQgE,QAASf,EAAM7C,QAAvB,mCAGlB,kBAAC,IAAD,CAASmD,GAAI,UAAb,YCZJU,E,uKAEF,OAAO,kBAAC,EAAWC,KAAKjB,W,GAFEkB,IAAMC,WAUrBC,eALS,SAAAzD,GAAK,MAAK,CAChCmD,OAAQnD,EAAMwB,KAAK2B,OACnB/D,MAAOY,EAAMwB,KAAKpC,SAGoB,CAAEI,YAA3BiE,CAAqCJ,GCZvCK,EAAe,SAACF,GAC3B,OAAO,SAACnB,GACN,OAAO,kBAAC,WAAD,CAAUsB,SAAU,kBAACC,EAAA,EAAD,OAAc,kBAACJ,EAAcnB,MCKtDwB,EAAQN,IAAMO,MAAK,kBAAM,uDACzBC,EAAiBR,IAAMO,MAAK,kBAAM,iCAClCE,EAAUT,IAAMO,MAAK,kBAAM,iCAC3BG,EAAQV,IAAMO,MAAK,kBAAM,iCACzBI,EAAOX,IAAMO,MAAK,kBAAM,kCACxBK,EAAWZ,IAAMO,MAAK,kBAAM,kCAC5BM,EAAmBb,IAAMO,MAAK,kBAAM,uDACpCO,EAAmBd,IAAMO,MAAK,kBAAM,uDAkC3BQ,G,kLA7BXhB,KAAKjB,MAAMkC,kB,+BAIX,OAAKjB,KAAKjB,MAAM5B,YAKd,kBAAC,IAAD,KACE,yBAAK6B,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAOkC,KAAK,oBAAoBC,OAAQf,EAAaW,KACrD,kBAAC,IAAD,CAAOG,KAAK,WAAWC,OAAQf,EAAaU,KAC5C,kBAAC,IAAD,CAAOI,KAAK,SAASC,OAAQf,EAAaK,KAC1C,kBAAC,IAAD,CAAOS,KAAK,WAAWC,OAAQf,EAAaM,KAC5C,kBAAC,IAAD,CAAOQ,KAAK,SAASC,OAAQf,EAAaO,KAC1C,kBAAC,IAAD,CAAOO,KAAK,QAAQC,OAAQf,EAAaQ,KACzC,kBAAC,IAAD,CAAOM,KAAK,YAAYC,OAAQf,EAAaS,KAC7C,kBAAC,IAAD,CAAOK,KAAK,SAASC,OAAQf,EAAaG,QAhBzC,kBAACD,EAAA,EAAD,U,GAPKJ,aCPHkB,GALM3C,YACnB4C,IACAlB,aAHsB,SAACzD,GAAD,MAAY,CAACS,YAAaT,EAAM4B,IAAInB,eAGjC,CAAC8D,cPSC,yDAAM,WAAMK,GAAN,eAAAC,EAAA,sEACXD,EAASE,eADE,OAC3BC,EAD2B,OAEjCC,QAAQC,IAAI,CAACF,IAAU3G,MAAK,WAC1BwG,EAJqC,CAAEhE,KAhBf,2BAiBO,2CAAN,yDOXRmB,CAGnBuC,ICMaY,GATU,WACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUlD,MAAOA,GACf,kBAAC,GAAD,SCPRmD,IAASV,OAAO,kBAAC,GAAD,MAAsBW,SAASC,eAAe,Sb8HxD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,MAAK,SAAAqH,GACjCA,EAAaC,iB,wLclIbC,EAAqB,yCAEvBnF,EAAe,CACjBhC,OAAQ,KACRa,MAAO,KACPD,MAAO,KACP+D,QAAQ,GAcGyC,EAAkB,SAACpH,EAAQa,EAAOD,EAAO+D,GAAvB,MAAmC,CAChEvC,KAAM+E,EACNE,QAAS,CAAErH,SAAQa,QAAOD,QAAO+D,YAEtB2B,EAAkB,yDAAM,WAAMF,GAAN,uBAAAC,EAAA,sEACZ3F,IAAQC,KADI,OAEF,KAD3Bd,EAD6B,QAEtBC,KAAKwH,aAAmB,EACRzH,EAASC,KAAKA,KAAnC2B,EAD4B,EAC5BA,GAAIb,EADwB,EACxBA,MAAOC,EADiB,EACjBA,MACjBuF,EAASgB,EAAgB3F,EAAIZ,EAAOD,GAAO,KAJV,2CAAN,uDAOlBA,EAAQ,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAMqF,GAAN,iBAAAC,EAAA,sEAC7B3F,IAAQE,MAAMC,EAAOC,EAAUC,GADF,OAEnB,KAD3BlB,EAD8C,QAEvCC,KAAKwH,WAChBlB,EAASE,MAELiB,EACF1H,EAASC,KAAK0H,SAASC,OAAS,EAC5B5H,EAASC,KAAK0H,SAAS,GACvB,yIACNpB,EAASsB,YAAW,QAAS,CAAEC,OAAQJ,MATW,2CAAjC,uDAYRvG,EAAS,yDAAM,WAAMoF,GAAN,SAAAC,EAAA,sEACH3F,IAAQM,SADL,OAEO,IAFP,OAEblB,KAAKwH,YAChBlB,EAASgB,EAAgB,KAAM,KAAM,MAAM,IAHnB,2CAAN,uDAOPnE,IAzCK,WAAmC,IAAlCzB,EAAiC,uDAAzBQ,EAAcG,EAAW,uCACpD,OAAQA,EAAOC,MACb,KAAK+E,EACH,OAAO,eACF3F,EADL,GAEKW,EAAOkF,SAEd,QACE,OAAO7F,K,qECTE4D,IARG,WAChB,OACE,6BACE,yBAAKZ,IAAKoD,IAAWnD,IAAI,Q,kBCL/BoD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,wCCArFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,0NCM3DxG,EAAe,CACjByG,UAAW,CACT,CACEtG,GAAI,EACJ8F,QAAS,qBACTS,IAAK,wBACLC,WAAY,GAEd,CACExG,GAAI,EACJ8F,QAAS,kBACTS,IAAK,wBACLC,WAAY,IAEd,CACExG,GAAI,EACJ8F,QAAS,cACTS,IAAK,wBACLC,WAAY,KAEd,CACExG,GAAI,EACJ8F,QAAS,mBACTS,IAAK,wBACLC,WAAY,KAGhBC,QAAS,KACT1H,OAAQ,IAqCG2H,EAAuB,SAAAC,GAAW,MAAK,CAClDhG,KAvEe,WAwEfgG,gBAGWC,EAAY,SAAA7H,GAAM,MAAK,CAAE4B,KAzEnB,aAyEqC5B,WAG3C8H,EAAiB,SAAAtI,GAAM,8CAAI,WAAMoG,GAAN,eAAAC,EAAA,sEACf9G,IAASa,WAAWJ,GADL,OAChCH,EADgC,OAEtCuG,EANwC,CAAEhE,KAzEnB,mBAyE2C8F,QAM1CrI,EAASC,OAFK,2CAAJ,uDAIvBQ,EAAY,SAAAN,GAAM,8CAAI,WAAMoG,GAAN,eAAAC,EAAA,sEACVhG,IAAWC,UAAUN,GADX,OAC3BH,EAD2B,OAEjCuG,EAASiC,EAAUxI,EAASC,OAFK,2CAAJ,uDAIlBS,EAAe,SAAAC,GAAM,8CAAI,WAAM4F,GAAN,SAAAC,EAAA,sEACbhG,IAAWE,aAAaC,GADX,OAEH,IAFG,OAEvBV,KAAKwH,YAChBlB,EAASiC,EAAU7H,IAHe,2CAAJ,uDAOnBgC,IAzDQ,WAAmC,IAAlChB,EAAiC,uDAAzBF,EAAca,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAtCa,WAuCX,IAAImG,EAAU,CACZ9G,GAAI,EACJ8F,QAASpF,EAAOiG,YAChBJ,IAAK,wBACLC,WAAY,GAEd,OAAO,eACFzG,EADL,CAEEuG,UAAU,GAAD,mBAAMvG,EAAMuG,WAAZ,CAAuBQ,IAChCH,YAAa,KAEjB,IAjDqB,mBAkDnB,OAAO,eACF5G,EADL,CAEE0G,QAAS/F,EAAO+F,UAEpB,IArDe,aAsDb,OAAO,eACF1G,EADL,CAEEhB,OAAQ2B,EAAO3B,SAEnB,IAzDgB,cA0Dd,OAAO,eACFgB,EADL,CAEEuG,UAAWvG,EAAMuG,UAAUS,QAAO,SAAAC,GAAC,OAAIA,EAAEhH,KAAOU,EAAOuG,YAE3D,QACE,OAAOlH,K,qFClETF,EAAe,CACjBqH,YAAa,CACX,CAAElH,GAAI,EAAGC,KAAM,wCACf,CAAED,GAAI,EAAGC,KAAM,wCACf,CAAED,GAAI,EAAGC,KAAM,4BACf,CAAED,GAAI,EAAGC,KAAM,4BACf,CAAED,GAAI,EAAGC,KAAM,4BACf,CAAED,GAAI,EAAGC,KAAM,yCAEjBkH,aAAc,CACZ,CAAEnH,GAAI,EAAG8F,QAAS,wCAClB,CAAE9F,GAAI,EAAG8F,QAAS,MAClB,CAAE9F,GAAI,EAAG8F,QAAS,+CAClB,CAAE9F,GAAI,EAAG8F,QAAS,wCAClB,CAAE9F,GAAI,EAAG8F,QAAS,oEAgBTsB,EAAqB,SAAAC,GAAc,MAAK,CACnD1G,KAjCmB,eAkCnB0G,mBAGapG,IAjBQ,WAAmC,IAAlClB,EAAiC,uDAAzBF,EAAca,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAtBiB,eAuBf,IAAI2G,EAAO5G,EAAO2G,eAClB,OAAO,eACFtH,EADL,CAEEoH,aAAa,GAAD,mBAAMpH,EAAMoH,cAAZ,CAA0B,CAAEnH,GAAI,EAAG8F,QAASwB,OAE5D,QACE,OAAOvH,K,4PC7BAwH,EAAsB,SACjCC,EACAC,EACAC,EACAC,GAEA,OAAOH,EAAMI,KAAI,SAAAC,GACf,OAAIA,EAAEH,KAAiBD,EACd,eAAKI,EAAZ,GAAkBF,GAEbE,MCAPhI,EAAe,CACjBiI,MAAO,GACP7J,SAAU,GACV8J,gBAAiB,EACjB/J,YAAa,EACbgK,YAAY,EACZC,oBAAqB,IA8CjBC,EAAkB,uCAAG,WACzBvD,EACApG,EACA4J,EACAC,GAJyB,SAAAxD,EAAA,6DAMzBD,EAAS0D,GAAwB,EAAM9J,IANd,SAOF4J,EAAU5J,GAPR,OASG,IATH,OASZsH,YACXlB,EAASyD,EAAc7J,IAEzBoG,EAAS0D,GAAwB,EAAO9J,IAZf,2CAAH,4DAeX+J,EAAgB,SAAA/J,GAAM,MAAK,CAAEoC,KA1EnB,iBA0EyCpC,WACnDgK,EAAkB,SAAAhK,GAAM,MAAK,CAAEoC,KA1EnB,mBA0E2CpC,WAEvDiK,EAAiB,SAAAxK,GAAW,MAAK,CAC5C2C,KA3EuB,mBA4EvB3C,gBAMWyK,EAAmB,SAAAT,GAAU,MAAK,CAC7CrH,KAjFyB,qBAkFzBqH,WAAYA,IAEDK,EAA0B,SAACL,EAAYzJ,GAAb,MAAyB,CAC9DoC,KApFmC,+BAqFnCqH,aACAzJ,WAEWmK,EAAe,SAACC,EAAM1K,GAAP,8CAAoB,WAAM0G,GAAN,eAAAC,EAAA,6DAC9CD,EAAS8D,GAAiB,IAC1B9D,EAAS6D,EAAeG,IAFsB,SAI3B7K,IAASC,SAAS4K,EAAM1K,GAJG,OAIxCI,EAJwC,OAK9CsG,EAAS8D,GAAiB,IAC1B9D,EAxBgC,CAAEhE,KA1ElB,YA0EmCmH,MAwBjCzJ,EAAKmJ,QACvB7C,EApBoD,CACpDhE,KA9E4B,wBA+E5BiI,MAkB4BvK,EAAKwK,aAPa,2CAApB,uDASfvK,EAAS,SAAAC,GAAM,8CAAI,WAAMoG,GAAN,SAAAC,EAAA,sDAC9BsD,EACEvD,EACApG,EACAT,IAASQ,OAAOwK,KAAKvK,GACrB+J,GAL4B,2CAAJ,uDAQf7J,EAAW,SAAAF,GAAM,8CAAI,WAAMoG,GAAN,SAAAC,EAAA,sDAChCsD,EACEvD,EACApG,EACAT,IAASW,SAASqK,KAAKvK,GACvBgK,GAL8B,2CAAJ,uDASfjH,IAxGM,WAAmC,IAAlCvB,EAAiC,uDAAzBF,EAAca,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAlBmB,iBAmBjB,OAAO,eACFZ,EADL,CAEE+H,MAAOP,EAAoBxH,EAAM+H,MAAOpH,EAAOnC,OAAQ,KAAM,CAC3DwK,UAAU,MAIhB,IAzBqB,mBA0BnB,OAAO,eACFhJ,EADL,CAEE+H,MAAOP,EAAoBxH,EAAM+H,MAAOpH,EAAOnC,OAAQ,KAAM,CAC3DwK,UAAU,MAIhB,IAhCc,YAiCZ,OAAO,eAAKhJ,EAAZ,CAAmB+H,MAAOpH,EAAOoH,QAEnC,IAlCqB,mBAmCnB,OAAO,eAAK/H,EAAZ,CAAmB/B,YAAa0C,EAAO1C,cAEzC,IApC0B,wBAqCxB,OAAO,eAAK+B,EAAZ,CAAmBgI,gBAAiBrH,EAAOkI,QAE7C,IAtCuB,qBAuCrB,OAAO,eAAK7I,EAAZ,CAAmBiI,WAAYtH,EAAOsH,aAExC,IAxCiC,+BAyC/B,OAAO,eACFjI,EADL,CAEEkI,oBAAqBvH,EAAOsH,WAAP,sBACbjI,EAAMkI,qBADO,CACcvH,EAAOnC,SACtCwB,EAAMkI,oBAAoBlB,QAAO,SAAA/G,GAAE,OAAIA,IAAOU,EAAOnC,YAG7D,QACE,OAAOwB,K,mBC1DbqG,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.cf0feb8d.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: { \"API-KEY\": \"409dbc5d-12bf-4998-9ed9-d1150968a119\" }\r\n});\r\nexport const usersAPI = {\r\n  getUsers: (currentPage = 1, pageSize = 10) => {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => response.data);\r\n  },\r\n  follow: (userId = 1) => {\r\n    return instance.post(`follow/${userId}`).then(response => response.data);\r\n  },\r\n  unfollow: (userId = 1) => {\r\n    return instance.delete(`follow/${userId}`).then(response => response.data);\r\n  },\r\n  getProfile: userId => {\r\n    return profileAPI.getProfile(userId);\r\n  }\r\n};\r\nexport const profileAPI = {\r\n  getProfile: userId => {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus: userId => {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus: status => {\r\n    return instance.put(`profile/status`, { status: status });\r\n  }\r\n};\r\nexport const authAPI = {\r\n  me: () => {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login: (email, password, rememberMe = false) => {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout: () => {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let initialStore = {};\r\n\r\nconst sidebarReducer = (state = initialStore, action) => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","let initialStore = [\r\n  { id: 1, name: \"Андрей\", age: 29 },\r\n  { id: 2, name: \"Валера\", age: 30 },\r\n  { id: 3, name: \"Люся\", age: 79 },\r\n  { id: 4, name: \"Саня\", age: 29 },\r\n  { id: 5, name: \"Катя\", age: 24 },\r\n  { id: 6, name: \"Володя\", age: 59 }\r\n];\r\n\r\nconst friendsReducer = (state = initialStore, action) => {\r\n  return state;\r\n};\r\n\r\nexport default friendsReducer;\r\n","let initialStore = [\r\n  { link: \"/profile\", text: \"Профиль\" },\r\n  { link: \"/friends\", text: \"Друзья\" },\r\n  { link: \"/dialogs\", text: \"Сообщения\" },\r\n  { link: \"/music\", text: \"Музыка\" },\r\n  { link: \"/news\", text: \"Новости\" },\r\n  { link: \"/settings\", text: `Настройки` }\r\n];\r\nconst navigationsReducer = (state = initialStore, action) => {\r\n  return state;\r\n};\r\n\r\nexport default navigationsReducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\nexport const initializeApp = () => async dispatch => {\r\n  const promise = await dispatch(getAuthUserData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport navigationsReducer from \"./navigations-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sideBar: sidebarReducer,\r\n  friendsData: friendsReducer,\r\n  navigationsData: navigationsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>\r\n          Профиль\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/friends\" activeClassName={classes.activeLink}>\r\n          Друзья\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/users\" activeClassName={classes.activeLink}>\r\n          Пользователи\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>\r\n          Сообщения\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/music\" activeClassName={classes.activeLink}>\r\n          Музыка\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/news\" activeClassName={classes.activeLink}>\r\n          Новости\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.activeLink}>\r\n          Настройки\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// const NavBar = props => {\r\n//     let navigationElement = props.state.map(d => (\r\n//         <div className={classes.item}>\r\n//             <NavLink to={d.link} activeClassName={classes.activeLink}>\r\n//                 {d.text}\r\n//             </NavLink>\r\n//         </div>\r\n//     ));\r\n//\r\n//     return <nav className={classes.nav}>{navigationElement}</nav>;\r\n// };\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png\"\r\n        alt=\"\"\r\n      />\r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Выйти</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return <Suspense fallback={<Preloader/>}><Component {...props} /></Suspense>\r\n  }\r\n};","import React, {Component} from \"react\";\r\nimport \"./App.css\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n// import {HashRouter} from \"react-router-dom\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {withSuspense} from \"./HOC/withSuspense\";\r\n\r\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst Friends = React.lazy(() => import(\"./components/Friends/Friends\"));\r\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\r\nconst News = React.lazy(() => import(\"./components/News/News\"));\r\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  \r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>;\r\n    }\r\n    \r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"app-wrapper\">\r\n          <HeaderContainer/>\r\n          <NavBar/>\r\n          <div className=\"app-wrapper-content\">\r\n            <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n            <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n            <Route path=\"/friends\" render={withSuspense(Friends)}/>\r\n            <Route path=\"/music\" render={withSuspense(Music)}/>\r\n            <Route path=\"/news\" render={withSuspense(News)}/>\r\n            <Route path=\"/settings\" render={withSuspense(Settings)}/>\r\n            <Route path=\"/login\" render={withSuspense(Login)}/>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import \"./App.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized});\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\nexport default AppContainer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n// import {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport AppContainer from \"./AppContainer\";\r\n\r\nconst AppSocialNetwork = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer/>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default AppSocialNetwork;\r\n","import * as serviceWorker from \"./serviceWorker\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppSocialNetwork from \"./AppSocialNetwork\";\r\n\r\nReactDOM.render(<AppSocialNetwork />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = \"social-network/auth/SET_AUTH_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_AUTH_USER_DATA,\r\n  payload: { userId, email, login, isAuth }\r\n});\r\nexport const getAuthUserData = () => async dispatch => {\r\n  const response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\nexport const login = (email, password, rememberMe) => async dispatch => {\r\n  const response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Email или пароль неправильный\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\nexport const logout = () => async dispatch => {\r\n  const response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3SLh7\",\"item\":\"NavBar_item__1rXSJ\",\"activeLink\":\"NavBar_activeLink__3Ebbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__69Knd\",\"loginBlock\":\"Header_loginBlock__1zQii\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialStore = {\r\n  postsData: [\r\n    {\r\n      id: 1,\r\n      message: \"hello, how u feel?\",\r\n      img: \"https://clck.ru/MDDf7\",\r\n      likeCounts: 0\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"where my money?\",\r\n      img: \"https://clck.ru/MDDgs\",\r\n      likeCounts: 95\r\n    },\r\n    {\r\n      id: 3,\r\n      message: \"i need help\",\r\n      img: \"https://clck.ru/MDDj5\",\r\n      likeCounts: 110\r\n    },\r\n    {\r\n      id: 4,\r\n      message: \"i want use props\",\r\n      img: \"https://clck.ru/MDDid\",\r\n      likeCounts: 11\r\n    }\r\n  ],\r\n  profile: null,\r\n  status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialStore, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        img: \"https://clck.ru/MDDf7\",\r\n        likeCounts: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n        newPostText: \"\"\r\n      };\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postsData: state.postsData.filter(p => p.id !== action.postId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = newPostText => ({\r\n  type: ADD_POST,\r\n  newPostText\r\n});\r\nexport const setUserProfile = profile => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = status => ({ type: SET_STATUS, status });\r\nexport const deletePost = postId => ({ type: DELETE_POST, postId });\r\n\r\nexport const getUserProfile = userId => async dispatch => {\r\n  const response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = userId => async dispatch => {\r\n  const response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = status => async dispatch => {\r\n  const response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialStore = {\r\n  dialogsData: [\r\n    { id: 1, name: \"Андрей\" },\r\n    { id: 2, name: \"Валера\" },\r\n    { id: 3, name: \"Люся\" },\r\n    { id: 4, name: \"Женя\" },\r\n    { id: 5, name: \"Катя\" },\r\n    { id: 6, name: \"Володя\" }\r\n  ],\r\n  messagesData: [\r\n    { id: 1, message: \"Привет\" },\r\n    { id: 2, message: \"Yo\" },\r\n    { id: 3, message: \"Как дела\" },\r\n    { id: 4, message: \"Привет\" },\r\n    { id: 5, message: \"Что делаешь?\" }\r\n  ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialStore, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, { id: 6, message: body }]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const sendMessageCreator = newMessageBody => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nconst UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\nlet initialStore = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialStore, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true\r\n        })\r\n      };\r\n\r\n    case UNFOLLOW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false\r\n        })\r\n      };\r\n\r\n    case SET_USERS:\r\n      return { ...state, users: action.users };\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.currentPage };\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.count };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching };\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst followInfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  APIMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  const response = await APIMethod(userId);\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const followSuccess = userId => ({ type: FOLLOW_SUCCESS, userId });\r\nexport const unfollowSuccess = userId => ({ type: UNFOLLOW_SUCCESS, userId });\r\nexport const setUsers = users => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = currentPage => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage\r\n});\r\nexport const setTotalUsersCount = totalUsersCount => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = isFetching => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching: isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n});\r\nexport const requestUsers = (page, pageSize) => async dispatch => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(page));\r\n\r\n  const data = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\nexport const follow = userId => async dispatch => {\r\n  followInfollowFlow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.follow.bind(userId),\r\n    followSuccess\r\n  );\r\n};\r\nexport const unfollow = userId => async dispatch => {\r\n  followInfollowFlow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.unfollow.bind(userId),\r\n    unfollowSuccess\r\n  );\r\n};\r\n\r\nexport default usersReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.2a1a00a4.svg\";"],"sourceRoot":""}